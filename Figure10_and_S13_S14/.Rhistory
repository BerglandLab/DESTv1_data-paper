load("/Users/jcbnunez/Downloads/moments_out.Rdata")
ls()
o
o %>% head %%> View
library(tidyverse)
o %>% head %>% View
ls()
o.ag
library(ggplot2)
library(data.table)
library(cowplot)
library(patchwork)
oo <- melt(o.ag[,-c("sampleId", "V1", "V2", "locale1", "locale2", "Continental_clusters.x", "Continental_clusters.y"),with=F][N>25],
id.vars=c("pair", "SNP_caller", "SFS_method", "RD_filter", "Pair_name", "popset", "sameLocale", "mask"))
oow <- dcast(oo, variable+pair+SFS_method+RD_filter+popset+sameLocale+mask~SNP_caller, value.var="value")
oow[SFS_method=="binom", SFS_method:="probs"]
oow
o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][,
list(mu=10^mean(log10(divergence_time)),
sd=10^sd(log10(divergence_time))),
list(popset, sameLocale, mask)]
t.test(log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EW"][mask==F]$divergence_time),
log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EE"][mask==F]$divergence_time))
t.test(log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EW"][mask==F]$divergence_time),
log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="WW"][mask==F]$divergence_time))
dt.plot <-
ggplot(data=oow[variable%in%c("divergence_time")][RD_filter=="all"], aes(x=log10(1+SNAPE), y=log10(1+PoolSNP), color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(log[10](Divergence~Time[SNAPE]+1)),
y=expression(log[10](Divergence~Time[PoolSNP]+1)))
dt.plot
theta.plot <-
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"], aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
theta.plot
mega.plot <- dt.plot + theta.plot +
theme(legend.position="bottom") + plot_layout(guides = "collect") +
plot_annotation(tag_levels = 'A')
mega.plot
dt.plot <-
ggplot(data=oow[variable%in%c("divergence_time")][RD_filter=="all"][mask<=1],
aes(x=log10(1+SNAPE), y=log10(1+PoolSNP), color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
ggtitle("Divergence Time (years)")
dt.plot
theta.plot <-
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"][mask<=1], aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
ggtitle("theta")
theta.plot
mega.plot <- dt.plot + theta.plot
dt.dt <- oow[variable%in%c("divergence_time")][SFS_method=="binom"]
theta.dt <- oow[variable%in%c("theta")][SFS_method=="binom"]
dt.dt[,cluster:=PoolSNP<SNAPE]
theta.dt[,cluster:=PoolSNP<SNAPE]
m <- merge(dt.dt, theta.dt, by="pair")
table(m$cluster.x, m$cluster.y)
dt.dt <- oow[variable%in%c("divergence_time")][SFS_method=="binom"]
theta.dt <- oow[variable%in%c("theta")][SFS_method=="binom"]
dt.dt
oow[variable%in%c("divergence_time")][SFS_method=="binom"]
oow
oow[,popset:=factor(popset, levels=c("WW", "EW", "EE"))]
oow
poolSNP_divtime.boxplot <- ggplot(data=oow[variable%in%c("divergence_time")][SFS_method=="probs"][RD_filter=="all"][mask<=1],
aes(x=popset, y=log10(PoolSNP+1), group=interaction(popset, sameLocale), fill=sameLocale)) +
geom_boxplot() +
facet_grid(~mask) +
ylab("log10(Divergence Time, years)") +
ggtitle("PoolSNP")
poolSNP_divtime.boxplot
SNAPE_divtime.boxplot <- ggplot(data=oow[variable%in%c("divergence_time")][SFS_method=="probs"][RD_filter=="all"][mask<=1],
aes(x=popset, y=log10(SNAPE+1), group=interaction(popset, sameLocale), fill=sameLocale)) +
geom_boxplot() +
facet_grid(~mask) +
ylab("log10(Divergence Time, years)") +
ggtitle("SNAPE")
SNAPE_divtime.boxplot
summary(lm((PoolSNP)~popset, oow[variable%in%c("divergence_time")][SFS_method=="binom"][RD_filter=="all"]))
o.rank <- o[,list(rank=rank(AIC, ties="first"),
deltaAIC=AIC-min(AIC, na.rm=T),
divergence_time, theta=theta, .N),
list(Pair_name)]
o.rank
o.rank[,SNP_caller:=tstrsplit(Pair_name, "\\.")[[1]]]
o.rank[,SFS_method:=tstrsplit(Pair_name, "\\.")[[2]]]
o.rank[,RD_filter:=tstrsplit(Pair_name, "\\.")[[3]]]
o.rank[,pair:=paste(tstrsplit(Pair_name, "\\.")[[4]], tstrsplit(Pair_name, "\\.")[[5]], sep=".")]
o.rank[,divergence_time:=as.numeric(divergence_time)]
o.rank[,theta:=as.numeric(theta)]
o.rank[,deltaAIC_bin:=floor(deltaAIC/20)*20]
o.rank <- o.rank[SFS_method=="binom"][RD_filter=="all"]
pairs_zero <- o.rank[rank==1][divergence_time<350][SNP_caller=="SNAPE"]$Pair_name
setkey(o.rank, "Pair_name")
o.rank[,zero:=F]
o.rank[J(pairs_zero), zero:=T]
rank.plot <-
ggplot(data=o.rank[deltaAIC<1000][order(deltaAIC_bin)],
aes(x=rank, y=log10(divergence_time), group=pair)) +
geom_line(color="grey") +
geom_point(aes(color=as.factor(deltaAIC_bin))) +
facet_grid(zero~SNP_caller) +
theme_bw()
rank.plot
o.rank.ag <- o.rank[,list(pr=mean(divergence_time<=350), deltaAIC_mean=mean(deltaAIC)),
list(SNP_caller, zero, rank)]
pr.plot <- ggplot(o.rank.ag[rank<=10], aes(x=rank, y=pr)) + geom_line()+ facet_grid(zero~SNP_caller)
dAIC.plot <- ggplot(o.rank.ag[rank<=10], aes(x=rank, y=deltaAIC_mean)) + geom_line()+ facet_grid(zero~SNP_caller)
dAIC.plot
pr.plot
om <- merge(o.rank, theta.dt[SFS_method=="binom"][RD_filter=="all"], by="pair")
rank_plot <-
ggplot(data=om[grepl("binom.all", Pair_name)][!is.na(cluster)],
aes(x=rank, y=divergence_time, group=Pair_name)) +
geom_line() +
facet_grid(SNP_caller~cluster) +
ylim(0, 20000)
ggsave(rank_plot, file="~/rank_plot.pdf")
ggplot(data=om[grepl("binom.all", Pair_name)][!is.na(cluster)],
aes(x=rank, y=divergence_time, group=Pair_name)) +
geom_line() +
facet_grid(SNP_caller~cluster) +
ylim(0, 20000)
om
om
ggplot(data=om[grepl("binom.all", Pair_name)][!is.na(cluster)],
aes(x=deltaAIC, y=divergence_time, group=Pair_name)) +
geom_line() +
geom_point() +
facet_grid(SNP_caller~cluster) +
ylim(0, 10000) +
xlim(0, 500)
load("~/moments_out.Rdata")
load("/Users/jcbnunez/Downloads/moments_out.Rdata")
oo <- melt(o.ag[,-c("sampleId", "V1", "V2", "locale1", "locale2", "Continental_clusters.x", "Continental_clusters.y"),with=F][N>25],
id.vars=c("pair", "SNP_caller", "SFS_method", "RD_filter", "Pair_name", "popset", "sameLocale", "mask"))
oo
oow[SFS_method=="binom", SFS_method:="probs"]
oow
o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][,
list(mu=10^mean(log10(divergence_time)),
sd=10^sd(log10(divergence_time))),
list(popset, sameLocale, mask)]
oo
o %>% dim
o.ag
o.ag$sampleId
o.ag$sampleId %>% tail()
o.ag %>% head
o.ag$pair
o.ag$pair %>% unique()
o.ag$pair %>% unique() %>% length()
o.ag %>% head
o.ag$popset
o.ag$popset %>% table()
o.ag %>% dim
o.ag %>% head
o.ag$SNP_caller %>% dim
o.ag$SNP_caller %>% table
o.ag$popset %>% table()
o.ag$SFS_method %>% table()
oow <- dcast(oo, variable+pair+SFS_method+RD_filter+popset+sameLocale+mask~SNP_caller, value.var="value")
oow
library(tidyverse)
oo
oow %>%
group_by(SNP_caller,SFS_method, RD_filter, popset, mask ) %>%
summarise(N = N())
oow %>%
group_by(SNP_caller , SFS_method, RD_filter, popset, mask ) %>%
summarise(N = N())
oo %>%
group_by(SNP_caller , SFS_method, RD_filter, popset, mask ) %>%
summarise(N = N())
oo %>%
group_by(SNP_caller , SFS_method, RD_filter, popset, mask ) %>%
summarise(N = n())
oo %>%
group_by(SNP_caller , SFS_method, RD_filter, popset, mask ) %>%
summarise(N = n()) %>%
as.data.frame()
oo %>%
.[which(.$mask == 0),] %>%
group_by(SNP_caller , SFS_method, RD_filter, popset, mask ) %>%
summarise(N = n()) %>%
as.data.frame()
oo %>%
.[which(.$mask == 0 &
.$RD_filter == "all"),] %>%
group_by(SNP_caller , SFS_method, RD_filter, popset, mask ) %>%
summarise(N = n()) %>%
as.data.frame()
oo %>% dim
oow <- dcast(oo, variable+pair+SFS_method+RD_filter+popset+sameLocale+mask~SNP_caller, value.var="value")
oow[SFS_method=="binom", SFS_method:="probs"]
o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][,
list(mu=10^mean(log10(divergence_time)),
sd=10^sd(log10(divergence_time))),
list(popset, sameLocale, mask)]
t.test(log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EW"][mask==F]$divergence_time),
log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EE"][mask==F]$divergence_time))
dt.plot <-
ggplot(data=oow[variable%in%c("divergence_time")][RD_filter=="all"], aes(x=log10(1+SNAPE), y=log10(1+PoolSNP), color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(log[10](Divergence~Time[SNAPE]+1)),
y=expression(log[10](Divergence~Time[PoolSNP]+1)))
dt.plot
theta.plot <-
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"], aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
theta.plot
o.ag
t.test(log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EW"][mask==F]$theta),
log10(o.ag[SFS_method=="binom"][RD_filter=="all"][SNP_caller=="PoolSNP"][popset=="EE"][mask==F]$theta))
theta.plot <-
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"], aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
oow
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"][mask==0],
aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(SFS_method~mask) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"][mask==0],
aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(~SFS_method) +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"][mask==0],
aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(~SFS_method, scales = "free") +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
ggplot(data=oow[variable%in%c("theta")][RD_filter=="all"][mask==0],
aes(x=SNAPE, y=PoolSNP, color=popset)) +
geom_point() +
facet_grid(~SFS_method, scales = "free") +
geom_abline(slope=1, intercept=0) +
theme_bw() +
theme(legend.position="bottom") +
labs(x=expression(Theta[SNAPE]),
y=expression(Theta[PoolSNP]))
=oow[variable%in%c("theta")][RD_filter=="all"][mask==0]oow[variable%in%c("theta")][RD_filter=="all"][mask==0]
oow[variable%in%c("theta")][RD_filter=="all"][mask==0]
oow[variable%in%c("theta")][RD_filter=="all"][mask==0]
oow[variable%in%c("theta")][RD_filter=="all"][mask==0] %>%
group_by(SFS_method) %>%
summarise(Mean_the = mean(PoolSNP))
oow[variable%in%c("theta")][RD_filter=="all"][mask==0] %>%
group_by(SFS_method) %>%
summarise(Mean_pool = mean(PoolSNP),
Mean_SNA = mean(SNAPE)
)
oow[variable%in%c("theta")][RD_filter=="all"][mask==0] %>%
group_by(SFS_method) %>%
summarise(Mean_pool = sd(PoolSNP),
Mean_SNA = sd(SNAPE)
)
1/200
dir <- "/project/berglandlab/moments/moments_input/"
system(paste("mkdir", dir, sep = " "))
samps <- merge(samps, clusters[,c("sampleId", "Continental_clusters"), with=F], by="sampleId")
pairs.sample <- pairs[,list(id=rep(sample(id, 200, replace=F))),
list(dist.bin=round(dist/20)*20)]
job_groups <- expand.grid(data_source=c("PoolSNP", "SNAPE"),
sfs_method=c("counts", "binom"))
pairs.sample <- pairs.sample[,list(data_source=job_groups$data_source,
sfs_method=job_groups$sfs_method,
dist.bin=dist.bin),
list(id)]
pairs <- CJ(samps[Continental_clusters=="1.Europe_W" & set=="DrosEU"]$sampleId,
samps[Continental_clusters=="3.Europe_E" & set=="DrosEU"]$sampleId)
pairs[,popset:="EW"]
### attach location information
setnames(pairs, "V1", "sampleId")
pairs <- merge(samps, pairs, by="sampleId")[,c("sampleId", "V2", "lat", "long", "popset"), with=F]
### make full pairwise table
pairs <- CJ(samps[Continental_clusters=="1.Europe_W" & set=="DrosEU"]$sampleId,
samps[Continental_clusters=="3.Europe_E" & set=="DrosEU"]$sampleId)
pairs[,popset:="EW"]
### attach location information
setnames(pairs, "V1", "sampleId")
pairs <- merge(samps, pairs, by="sampleId")[,c("sampleId", "V2", "nFlies", "lat", "long", "popset"), with=F]
pairs <- CJ(samps[Continental_clusters=="1.Europe_W" & set=="DrosEU"]$sampleId,
samps[Continental_clusters=="3.Europe_E" & set=="DrosEU"]$sampleId)
pairs[,popset:="EW"]
### attach location information
setnames(pairs, "V1", "sampleId")
pairs <- merge(samps, pairs, by="sampleId")[,c("sampleId", "V2", "nFlies", "lat", "long", "popset"), with=F]
setnames(pairs, c("sampleId", "V2", "nFlies", "lat", "long"), c("V1", "sampleId", "nFlies.1", "lat.V1", "long.V1"))
load("/Users/jcbnunez/Downloads/moments_out.Rdata")
pairs_all <- read.csv("~/Downloads/pairs_all.csv")
View(pairs_all)
?write.table
write.table(pairs_all,
file = "/Users/jcbnunez/Documents/GitHub/data-paper/additionalAnalyses/moments/pairs_all.txt",
append = FALSE,
quote = FALSE,
sep = "\t",
eol = "\n",
na = "NA",
dec = ".",
row.names = FALSE,
col.names = TRUE)
